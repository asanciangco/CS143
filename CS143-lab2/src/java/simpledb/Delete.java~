package simpledb;

import java.io.IOException;

/**
 * The delete operator. Delete reads tuples from its child operator and removes
 * them from the table they belong to.
 */
public class Delete extends Operator {

    private static final long serialVersionUID = 1L;
    private TransactionId _tid;
    private DbIterator _child;
    private TupleDesc _td;
    private boolean _deleted;
    
    /**
     * Constructor specifying the transaction that this delete belongs to as
     * well as the child to read from.
     * 
     * @param t
     *            The transaction this delete runs in
     * @param child
     *            The child operator from which to read tuples for deletion
     */
    public Delete(TransactionId t, DbIterator child) {
        // some code goes here
        // DONE
        _tid = t;
        _child = child;
        
        Type[]   types	= new Type[1];
	String[] fields	= new String[1];
	types[0]  = Type.INT_TYPE;
	fields[0] = "Count";
	_td = new TupleDesc(types, fields);
    }

    public TupleDesc getTupleDesc() {
        // some code goes here
        // DONE
        return _td;
    }

    public void open() throws DbException, TransactionAbortedException {
        // some code goes here
        // DONE
        _child.open();
        _deleted = false;
        super.open();
    }

    public void close() {
        // some code goes here
        // DONE
        super.close();
        _child.close();
    }

    public void rewind() throws DbException, TransactionAbortedException {
        // some code goes here
        // DONE
        _child.rewind();
    }

    /**
     * Deletes tuples as they are read from the child operator. Deletes are
     * processed via the buffer pool (which can be accessed via the
     * Database.getBufferPool() method.
     * 
     * @return A 1-field tuple containing the number of deleted records.
     * @see Database#getBufferPool
     * @see BufferPool#deleteTuple
     */
    protected Tuple fetchNext() throws TransactionAbortedException, DbException {
        // some code goes here
	try {
	    if (_deleted)
		return null;
	
	    BufferPool bp  = Database.getBufferPool();
	    int count = 0;
	    
	    Tuple t;
	    while (_child.hasNext()) {
		t = _child.next();
		bp.deleteTuple(_tid, t);
		count++;
	    }
	    Tuple ret = new Tuple(_td);
	    ret.setField(0, new IntField(count));
	    return ret;
	} catch (Exception e) {
	    throw new DbException("Error (delete): Could not delete tuples. " + e);
	}
    }

    @Override
    public DbIterator[] getChildren() {
        // some code goes here
        // DONE
        DbIterator[] children = {_child};
        return children;
    }

    @Override
    public void setChildren(DbIterator[] children) {
        // some code goes here
        // DONE
        _child = children[0];
    }

}
